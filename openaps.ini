[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[report "monitor/glucose-pre.json"]
use = rezone
reporter = JSON
astimezone = True
date = timestamp dateString start_at end_at created_at system_time display_time
adjust = missing
timezone = 
device = tz
input = nightscout/glucose-raw.json

[alias]
rm-warmup = ! bash -c "rm -f monitor/clock.json monitor/clock-zoned.json > /dev/null"
warmup = report invoke monitor/clock.json monitor/clock-zoned.json
fail-warmup = ! bash -c "echo PREFLIGHT FAIL. Invoking sudo oref0-reset-usb && sudo oref0-reset-usb && sleep 30 && openaps warmup && grep -q T monitor/clock.json && echo PREFLIGHT RESET SUCCESS"
preflight = ! bash -c "echo PREFLIGHT && openaps preflight-ns && openaps rm-warmup 2>&1 >/dev/null && openaps warmup 2>&1 >/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || logger -t do-loop-start "PREFLIGHT Second warmup" && sleep 5 && { openaps warmup || openaps fail-warmup }"
preflight-ns = ! bash -c "openaps report invoke nightscout/preflight.json && grep -q ^true$ nightscout/preflight.json"
monitor-cgm = report invoke nightscout/glucose-raw.json monitor/glucose-pre.json
monitor-pump-history = report invoke raw-pump/pump-history-raw.json monitor/pump-history.json
get-basal-status = report invoke monitor/temp-basal-status.json
get-pump-details = report invoke monitor/reservoir.json monitor/status.json monitor/battery.json
get-settings = report invoke raw-pump/bg_targets_raw.json settings/bg_targets.json raw-pump/insulin-sensitivities-raw.json settings/insulin-sensitivities.json raw-pump/selected-basal-profile.json settings/selected-basal-profile.json raw-pump/settings.json settings/settings.json oref0-monitor/profile.json
gather-pump-data = ! bash -c "openaps get-basal-status && openaps get-pump-details && openaps monitor-pump-history"
gather-clean-data = ! bash -c "Ã¸openaps gather-pump-data && openaps get-settings && openaps monitor-cgm && cat monitor/glucose-pre.json | json -e \"this.glucose = this.sgv\" > monitor/glucose.json"
do-oref0 = ! bash -c "rm oref0-predict/oref0.json; openaps report invoke oref0-monitor/iob.json && openaps report invoke oref0-predict/oref0.json || echo PREDICT FAILED"
enact-oref0 = ! bash -c "openaps report invoke oref0-enacted/enacted-temp-basal.json || echo ENACT FAILED"
do-everything = ! bash -c "oref0 fix-git-corruption && openaps preflight && openaps gather-clean-data && openaps get-settings && openaps do-oref0 && openaps enact-oref0 && sleep 2 && openaps report invoke nightscout/preflight.json && openaps report-nightscout"
report-nightscout = ! bash -c "openaps report invoke nightscout/recent-treatments.json nightscout/uploaded.json nightscout/openaps-status.json nightscout/uploaded-recent-devicestatus.json || echo NIGHTSCOUT UPLOAD FAILED"
upload-treatments = ! bash -c "openaps report invoke nightscout/recent-treatments.json nightscout/uploaded.json || echo UPLOAD TREATMENTS FAILED"
upload-status = ! bash -c "openaps report invoke nightscout/openaps-status.json nightscout/uploaded-recent-devicestatus.json || echo UPLOAD STATUS FAILED"
export-loop = ! bash -c "oref0 export-loop | tee backup/loop-export.json"

[report "model.json"]
device = pump
use = model
reporter = JSON

[report "raw-pump/bg_targets_raw.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "raw-pump/insulin-sensitivities-raw.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/insulin-sensitivities.json"]
device = units
to = mg/dL
use = insulin_sensitivities
input = raw-pump/insulin-sensitivities-raw.json
reporter = JSON

[report "monitor/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "oref0-predict/oref0.json"]
use = shell
oref0-iob = oref0-monitor/iob.json
temp-basal = monitor/temp-basal-status.json
reporter = text
json_default = True
oref0-profile = oref0-monitor/profile.json
device = determine-basal
remainder = 
glucose = monitor/glucose.json

[report "raw-pump/pump-history-raw.json"]
hours = 4.0
device = pump
use = iter_pump_hours
reporter = JSON

[report "monitor/pump-history.json"]
date = timestamp dateString start_at end_at created_at
use = rezone
adjust = missing
reporter = JSON
device = tz
input = raw-pump/pump-history-raw.json
astimezone = True

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "oref0-enacted/enacted-temp-basal.json"]
device = pump
input = oref0-predict/oref0.json
use = set_temp_basal
reporter = JSON

[report "settings/settings.json"]
device = oref0
remainder = copy-fresher raw-pump/settings.json
use = shell
json_default = True
reporter = JSON

[report "raw-pump/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/selected-basal-profile.json"]
device = oref0
remainder = copy-fresher raw-pump/selected-basal-profile.json
use = shell
json_default = True
reporter = JSON

[report "raw-pump/selected-basal-profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "raw-pump/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "raw-pump/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "raw-pump/status.json"]
device = pump
use = read_status
reporter = JSON

[report "raw-pump/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "detect-sensitivity"]
vendor = openaps.vendors.process
extra = detect-sensitivity.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "oref0-monitor/profile.json"]
insulin-sensitivities = settings/insulin-sensitivities.json
use = shell
settings = settings/settings.json
reporter = text
json_default = True
device = get-profile
bg-targets = settings/bg_targets.json
basal-profile = settings/selected-basal-profile.json
max-iob = preferences.json
remainder = 

[report "oref0-monitor/iob.json"]
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pump-history = monitor/pump-history.json
oref0-profile = oref0-monitor/profile.json
device = calculate-iob
remainder = 

[report "nightscout/preflight.json"]
oper = preflight
use = shell
reporter = JSON
json_default = True
device = ns
remainder = 

[report "nightscout/uploaded.json"]
oper = upload-non-empty-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = nightscout/recent-treatments.json

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = monitor/pump-history.json model.json

[report "nightscout/glucose-raw.json"]
oper = get
device = ns
use = shell
reporter = JSON
remainder = entries/sgv.json count=50

[report "monitor/glucose-old.json"]
oper = oref0_glucose
use = shell
reporter = JSON
json_default = True
device = ns
remainder = --hours 25.0 --threshold 100

[report "monitor/upload-status.json"]
oper = monitor/clock-zoned.json
use = shell
reporter = JSON
json_default = True
device = ns-status
remainder = monitor/clock-zoned.json oref0-monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json
suggested = enact/suggested.json
status = monitor/status.json
reservoir = monitor/reservoir.json
battery = monitor/battery.json
clock = monitor/clock-zoned.json
iob = oref0-monitor/iob.json
enacted = enact/enacted.json

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "nightscout/openaps-status.json"]
device = ns-status
remainder = monitor/clock.json oref0-monitor/iob.json oref0-predict/oref0.json oref0-enacted/enacted-temp-basal.json monitor/battery.json monitor/reservoir.json monitor/status.json
use = shell
json_default = True
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "settings/bg_targets.json"]
device = units
to = mg/dL
use = bg_targets
input = raw-pump/bg_targets_raw.json
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/openaps-status.json"]
device = ns-status
remainder = monitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json
use = shell
json_default = True
reporter = JSON

[report "nightscout/uploaded-recent-devicestatus.json"]
oper = upload
use = shell
reporter = JSON
json_default = True
device = ns
remainder = devicestatus.json nightscout/openaps-status.json
